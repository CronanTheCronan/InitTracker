// <auto-generated />
using System;
using InitTrackerApp.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InitTrackerApp.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InitTrackerApp.API.Models.Conditions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Conditions");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Content");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.HeroGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("HeroGroups");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.Heroes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByUserId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.HeroesExtended", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArmorClass");

                    b.Property<int?>("Condition1");

                    b.Property<int?>("Condition2");

                    b.Property<int?>("Condition3");

                    b.Property<int?>("Condition4");

                    b.Property<int>("CurrentHp")
                        .HasColumnName("CurrentHP");

                    b.Property<int>("HeroId");

                    b.Property<int>("MaxHp")
                        .HasColumnName("MaxHP");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("HeroesExtended");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.HeroesGroupXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupId");

                    b.Property<int>("HeroExtId");

                    b.Property<int>("HeroId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("HeroExtId");

                    b.HasIndex("HeroId");

                    b.HasIndex("UserId");

                    b.ToTable("HeroesGroupXref");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.MonsterGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("MonsterGroups");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.Monsters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Alignment");

                    b.Property<int>("ChallengeRating");

                    b.Property<int?>("Content");

                    b.Property<int>("CreatedByUser");

                    b.Property<bool>("Homebrew");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("RecAc")
                        .HasColumnName("RecAC");

                    b.Property<int>("RecHp")
                        .HasColumnName("RecHP");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUser");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.MonstersExtended", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArmorClass");

                    b.Property<int?>("Condition1");

                    b.Property<int?>("Condition2");

                    b.Property<int?>("Condition3");

                    b.Property<int?>("Condition4");

                    b.Property<int>("CurrentHp")
                        .HasColumnName("CurrentHP");

                    b.Property<int>("MaxHp")
                        .HasColumnName("MaxHP");

                    b.Property<int>("MonsterId");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("MonstersExtended");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.MonstersGroupXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupId");

                    b.Property<int>("MonsterExtId");

                    b.Property<int>("MonsterId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("MonstersGroupXref");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.Heroes", b =>
                {
                    b.HasOne("InitTrackerApp.API.Models.Users", "CreatedByUser")
                        .WithMany("Heroes")
                        .HasForeignKey("CreatedByUserId")
                        .HasConstraintName("FK_Heroes_Users");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.HeroesExtended", b =>
                {
                    b.HasOne("InitTrackerApp.API.Models.Heroes", "Hero")
                        .WithMany("HeroesExtended")
                        .HasForeignKey("HeroId")
                        .HasConstraintName("FK_HeroesExtended_Heroes");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.HeroesGroupXref", b =>
                {
                    b.HasOne("InitTrackerApp.API.Models.HeroGroups", "Group")
                        .WithMany("HeroesGroupXref")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_HeroesGroupXref_HeroGroups");

                    b.HasOne("InitTrackerApp.API.Models.HeroesExtended", "HeroExt")
                        .WithMany("HeroesGroupXref")
                        .HasForeignKey("HeroExtId")
                        .HasConstraintName("FK_HeroesGroupXref_HeroesExtended");

                    b.HasOne("InitTrackerApp.API.Models.Heroes", "Hero")
                        .WithMany("HeroesGroupXref")
                        .HasForeignKey("HeroId")
                        .HasConstraintName("FK_HeroesGroupXref_Heroes");

                    b.HasOne("InitTrackerApp.API.Models.Users", "User")
                        .WithMany("HeroesGroupXref")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_HeroesGroupXref_Users");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.Monsters", b =>
                {
                    b.HasOne("InitTrackerApp.API.Models.Users", "CreatedByUserNavigation")
                        .WithMany("Monsters")
                        .HasForeignKey("CreatedByUser")
                        .HasConstraintName("FK_Monsters_User");
                });

            modelBuilder.Entity("InitTrackerApp.API.Models.MonstersExtended", b =>
                {
                    b.HasOne("InitTrackerApp.API.Models.Monsters", "Monster")
                        .WithMany("MonstersExtended")
                        .HasForeignKey("MonsterId")
                        .HasConstraintName("FK_MonstersExtended_Monsters");
                });
#pragma warning restore 612, 618
        }
    }
}
